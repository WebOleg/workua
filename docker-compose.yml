version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: url_shortener_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=url_shortener
      - DB_USERNAME=laravel
      - DB_PASSWORD=secret
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - QUEUE_CONNECTION=redis
      - CACHE_DRIVER=redis
    networks:
      - url_shortener_network
    depends_on:
      - mysql
      - redis

  nginx:
    image: nginx:alpine
    container_name: url_shortener_nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - url_shortener_network
    depends_on:
      - app

  mysql:
    image: mysql:8.0
    container_name: url_shortener_mysql
    restart: unless-stopped
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: url_shortener
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: root_secret
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - url_shortener_network

  redis:
    image: redis:alpine
    container_name: url_shortener_redis
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - url_shortener_network

  queue:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: url_shortener_queue
    restart: unless-stopped
    working_dir: /var/www
    command: php artisan queue:work --tries=3
    volumes:
      - ./:/var/www
    environment:
      - APP_ENV=local
      - DB_HOST=mysql
      - REDIS_HOST=redis
      - QUEUE_CONNECTION=redis
    networks:
      - url_shortener_network
    depends_on:
      - app
      - redis

networks:
  url_shortener_network:
    driver: bridge

volumes:
  mysql_data:
  redis_data:
